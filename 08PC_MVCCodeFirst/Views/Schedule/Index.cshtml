@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>Etkinlik Takvimi</title>
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="stylesheet" href="/AdminLTE-3.0.4/plugins/fontawesome-free/css/all.min.css" />
    <link rel="stylesheet" href="https://code.ionicframework.com/ionicons/2.0.1/css/ionicons.min.css" />
    <link rel="stylesheet" href="/AdminLTE-3.0.4/dist/css/adminlte.min.css" />
    <link href="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.0/main.min.css" rel="stylesheet" />
    <style>
        #calendar {
            max-width: 100%;
            margin: 0 auto;
            height: 700px;
        }

        #external-events .external-event {
            cursor: move;
            padding: 5px 10px;
            color: white;
            margin-bottom: 5px;
            border-radius: 3px;
        }
    </style>
</head>
<body class="hold-transition sidebar-mini">
    <div class="wrapper">
        <!-- Navbar -->
        <nav class="main-header navbar navbar-expand navbar-white navbar-light">
            <ul class="navbar-nav">
                <li class="nav-item">
                    <a class="nav-link" data-widget="pushmenu" href="#"><i class="fas fa-bars"></i></a>
                </li>
                <li class="nav-item d-none d-sm-inline-block"><a href="#" class="nav-link">Ana Sayfa</a></li>
            </ul>
        </nav>

        <!-- Sidebar -->
        <aside class="main-sidebar sidebar-dark-primary elevation-4">
            <a href="../index3.html" class="brand-link">
                <img src="/AdminLTE-3.0.4/dist/img/AdminLTELogo.png" alt="AdminLTE Logo" class="brand-image img-circle elevation-3" style="opacity: .8" />
                <span class="brand-text font-weight-light">AdminLTE 3</span>
            </a>

            <div class="sidebar">
                <div class="user-panel mt-3 pb-3 mb-3 d-flex">
                    <div class="image">
                        <img src="/AdminLTE-3.0.4/dist/img/user2-160x160.jpg" class="img-circle elevation-2" alt="User Image" />
                    </div>
                    <div class="info">
                        <a href="#" class="d-block">Admin</a>
                    </div>
                </div>

                <nav class="mt-2">
                    <ul class="nav nav-pills nav-sidebar flex-column" data-widget="treeview" role="menu" data-accordion="false">
                        <li class="nav-item">
                            <a href="/Schedule/Index" class="nav-link">
                                <i class="nav-icon fas fa-calendar-day"></i>
                                <p>Etkinlik Çizelgesi</p>
                            </a>
                        </li>
                        <li class="nav-item">
                            <a href="/Schedule/CategoryList" class="nav-link">
                                <i class="nav-icon fas fa-tags"></i>
                                <p>Kategoriler</p>
                            </a>
                        </li>
                        <li class="nav-item">
                            <a href="/Event/Index" class="nav-link">
                                <i class="nav-icon fas fa-calendar-check"></i>
                                <p>Etkinlikler</p>
                            </a>
                        </li>
                    </ul>
                </nav>
            </div>
        </aside>


        <!-- Content -->
        <div class="content-wrapper">
            <section class="content-header">
                <div class="container-fluid"><h1>Etkinlik Takvimi</h1></div>
            </section>

            <section class="content">
                <div class="row">
                    <!-- Sol panel -->
                    <div class="col-md-3">
                        <div class="card">
                            <div class="card-header"><h4 class="card-title">Etkinlikler</h4></div>
                            <div class="card-body" id="external-events"></div>
                        </div>
                        <div class="card mt-3">
                            <div class="card-header"><h3 class="card-title">Yeni Etkinlik</h3></div>
                            <div class="card-body">
                                <select id="category-select" class="form-control mb-2">
                                    <option value="0">Kategori Seçin</option>
                                </select>
                                <div class="input-group">
                                    <input id="new-event" type="text" class="form-control" placeholder="Etkinlik Adı" />
                                    <div class="input-group-append">
                                        <button id="add-new-event" class="btn btn-primary">Ekle</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Sağ takvim -->
                    <div class="col-md-9">
                        <div class="card card-primary">
                            <div class="card-body p-0">
                                <div id="calendar"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </section>
        </div>

        <!-- Footer -->
        <footer class="main-footer">
            <strong>&copy; @DateTime.Now.Year Takvim Uygulaması.</strong>
        </footer>
    </div>

    <!-- JS Scripts -->
    <script src="/AdminLTE-3.0.4/plugins/jquery/jquery.min.js"></script>
    <script src="/AdminLTE-3.0.4/plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.0/main.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.0/interaction.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.3/locales-all.min.js"></script>



    @*<script>
            document.addEventListener('DOMContentLoaded', function () {
                const containerEl = document.getElementById('external-events');
                const calendarEl = document.getElementById('calendar');
                const categorySelect = document.getElementById('category-select');

                // Kategorileri yükle
                fetch('/Event/GetCategories')
                    .then(res => res.json())
                    .then(categories => {
                        categories.forEach(cat => {
                            const opt = document.createElement('option');
                            opt.value = cat.CategoryId;
                            opt.textContent = cat.CategoryName;
                            opt.style.color = cat.CategoryColor;
                            categorySelect.appendChild(opt);
                        });
                    });

                // Dış etkinlikleri yükle (tarihi olmayanlar)
                fetch('/Event/GetExternalEvents')
                    .then(res => res.json())
                    .then(events => {
                        events.forEach(ev => {
                            const el = document.createElement('div');
                            el.className = 'external-event';
                            el.innerText = ev.title;
                            el.style.backgroundColor = ev.backgroundColor;
                            el.setAttribute('data-categoryid', ev.categoryId);
                            el.setAttribute('data-bgcolor', ev.backgroundColor);
                            el.setAttribute('data-eventid', ev.id);
                            containerEl.appendChild(el);
                        });
                    });

                // Yeni etkinlik ekle
                document.getElementById('add-new-event').addEventListener('click', function () {
                    const title = document.getElementById('new-event').value.trim();
                    const categoryId = categorySelect.value;

                    if (!title) return alert("Etkinlik adı boş olamaz.");
                    if (categoryId == 0) return alert("Kategori seçin.");

                    const selectedColor = categorySelect.options[categorySelect.selectedIndex].style.color;

                    $.ajax({
                        url: '/Event/SaveEvent',
                        type: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify({
                            title: title,
                            start: null,
                            end: null,
                            allDay: true,
                            backgroundColor: selectedColor,
                            borderColor: selectedColor,
                            categoryId: categoryId
                        }),
                        success: function () {
                            location.reload();
                        }
                    });
                });

                // Dış etkinlikleri sürüklenebilir yap
                new FullCalendar.Draggable(containerEl, {
                    itemSelector: '.external-event',
                    eventData: function (el) {
                        return {
                            id: el.getAttribute('data-eventid'),
                            title: el.innerText,
                            backgroundColor: el.getAttribute('data-bgcolor'),
                            borderColor: el.getAttribute('data-bgcolor'),
                            extendedProps: {
                                categoryId: el.getAttribute('data-categoryid')
                            }
                        };
                    }
                });

                // Takvimi başlat
                const calendar = new FullCalendar.Calendar(calendarEl, {
                    themeSystem: 'bootstrap',
                    editable: true,
                    droppable: true,
                    selectable: true,
                    eventDurationEditable: true,
                    initialView: 'dayGridMonth',

                    headerToolbar: {
                        left: 'prev,next today',
                        center: 'title',
                        right: 'dayGridMonth,timeGridWeek,timeGridDay'
                    },

                    events: '/Event/GetEvents',

                    // Takvime dışarıdan etkinlik bırakıldığında
                    eventReceive: function (info) {
                        const e = info.event;

                        $.ajax({
                            url: '/Event/SaveEvent',
                            type: 'POST',
                            contentType: 'application/json',
                            data: JSON.stringify({
                                id: e.id,
                                title: e.title,
                                start: e.start.toISOString(),
                                end: e.end ? e.end.toISOString() : e.start.toISOString(),
                                allDay: e.allDay,
                                categoryId: e.extendedProps.categoryId
                            }),
                            success: function (res) {
                                if (res.id) {
                                    e.setProp('id', res.id);
                                }

                                // Soldan kaldır
                                if (info.draggedEl && info.draggedEl.parentNode) {
                                    info.draggedEl.parentNode.removeChild(info.draggedEl);
                                }
                            },
                            error: function () {
                                alert("Kayıt başarısız oldu.");
                                e.remove();
                            }
                        });
                    },

                    // Etkinlik başka güne taşındığında
                    eventDrop: function (info) {
                        const e = info.event;

                        $.ajax({
                            url: '/Event/UpdateEvent',
                            type: 'POST',
                            data: {
                                id: e.id,
                                start: e.start.toISOString(),
                                end: e.end ? e.end.toISOString() : e.start.toISOString()
                            },
                            success: function (res) {
                                if (!res.success) {
                                    alert("Tarih güncellemesi başarısız.");
                                }
                            }
                        });
                    },

                    // Etkinlik süresi değiştirildiğinde (kenardan uzatıldığında)
                    eventResize: function (info) {
                        const e = info.event;

                        $.ajax({
                            url: '/Event/UpdateEvent',
                            type: 'POST',
                            data: {
                                id: e.id,
                                start: e.start.toISOString(),
                                end: e.end ? e.end.toISOString() : null
                            },
                            success: function (res) {
                                if (!res.success) {
                                    alert("Süre güncellemesi başarısız.");
                                    info.revert();
                                }
                            },
                            error: function () {
                                alert("Sunucu hatası.");
                                info.revert();
                            }
                        });
                    },

                    // Etkinlik tıklanırsa
                    eventClick: function (info) {
                        if (confirm("Etkinliği silmek istiyor musunuz?")) {
                            $.ajax({
                                url: '/Event/DeleteEvent',
                                type: 'POST',
                                data: { id: info.event.id },
                                success: function () {
                                    info.event.remove();
                                }
                            });
                        }
                    },

                    // Her etkinlik kutusuna düzenle ve sil butonları ekle
                    eventDidMount: function (info) {
                        const editBtn = document.createElement('a');
                        editBtn.innerHTML = '✏️';
                        editBtn.href = `/Event/Edit/${info.event.id}`;
                        editBtn.style.marginLeft = '10px';
                        editBtn.style.textDecoration = 'none';

                        const deleteBtn = document.createElement('span');
                        deleteBtn.innerHTML = '🗑️';
                        deleteBtn.style.cursor = 'pointer';
                        deleteBtn.style.marginLeft = '5px';
                        deleteBtn.style.color = 'red';

                        deleteBtn.addEventListener('click', function (e) {
                            e.stopPropagation();

                            if (confirm('Bu etkinliği silmek istiyor musunuz?')) {
                                $.ajax({
                                    url: '/Event/DeleteEvent',
                                    type: 'POST',
                                    data: { id: info.event.id },
                                    success: function () {
                                        info.event.remove();
                                    }
                                });
                            }
                        });

                        const titleEl = info.el.querySelector('.fc-event-title');
                        if (titleEl) {
                            titleEl.appendChild(editBtn);
                            titleEl.appendChild(deleteBtn);
                        }
                    }
                });

                calendar.render();
            });
        </script>*@

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const containerEl = document.getElementById('external-events');
            const calendarEl = document.getElementById('calendar');
            const categorySelect = document.getElementById('category-select');

            // Kategorileri yükle
            fetch('/Event/GetCategories')
                .then(res => res.json())
                .then(categories => {
                    categories.forEach(cat => {
                        const opt = document.createElement('option');
                        opt.value = cat.CategoryId;
                        opt.textContent = cat.CategoryName;
                        opt.style.color = cat.CategoryColor;
                        categorySelect.appendChild(opt);
                    });
                });

            // Dış etkinlikleri yükle (tarihsiz)
            fetch('/Event/GetExternalEvents')
                .then(res => res.json())
                .then(events => {
                    events.forEach(ev => {
                        const el = document.createElement('div');
                        el.className = 'external-event';
                        el.innerText = ev.title;
                        el.style.backgroundColor = ev.backgroundColor;
                        el.setAttribute('data-categoryid', ev.categoryId);
                        el.setAttribute('data-bgcolor', ev.backgroundColor);
                        el.setAttribute('data-eventid', ev.id);
                        containerEl.appendChild(el);
                    });
                });

            // Yeni etkinlik oluştur
            document.getElementById('add-new-event').addEventListener('click', function () {
                const title = document.getElementById('new-event').value.trim();
                const categoryId = categorySelect.value;

                if (!title) return alert("Etkinlik adı boş olamaz.");
                if (categoryId == 0) return alert("Kategori seçin.");

                const selectedColor = categorySelect.options[categorySelect.selectedIndex].style.color;

                $.ajax({
                    url: '/Event/SaveEvent',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({
                        title: title,
                        start: null,
                        end: null,
                        allDay: true,
                        backgroundColor: selectedColor,
                        borderColor: selectedColor,
                        categoryId: categoryId
                    }),
                    success: function () {
                        location.reload();
                    }
                });
            });

            // Dış etkinlikleri sürüklenebilir yap
            new FullCalendar.Draggable(containerEl, {
                itemSelector: '.external-event',
                eventData: function (el) {
                    return {
                        id: el.getAttribute('data-eventid'),
                        title: el.innerText,
                        backgroundColor: el.getAttribute('data-bgcolor'),
                        borderColor: el.getAttribute('data-bgcolor'),
                        extendedProps: {
                            categoryId: el.getAttribute('data-categoryid')
                        }
                    };
                }
            });

            // Takvimi başlat
            const calendar = new FullCalendar.Calendar(calendarEl, {
                themeSystem: 'bootstrap',
                editable: true,
                droppable: true,
                selectable: true,
                eventDurationEditable: true,
                initialView: 'dayGridMonth',
                locale: 'tr',
                headerToolbar: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'dayGridMonth,timeGridWeek,timeGridDay'
                },
                events: '/Event/GetEvents',

                eventReceive: function (info) {
                    const e = info.event;

                    const endDate = new Date(e.start);
                    endDate.setHours(23, 59, 0, 0); // aynı günün sonu

                    $.ajax({
                        url: '/Event/SaveEvent',
                        type: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify({
                            id: e.id,
                            title: e.title,
                            start: e.start.toISOString(),
                            end: endDate.toISOString(),
                            allDay: e.allDay,
                            backgroundColor: e.backgroundColor,
                            borderColor: e.borderColor,
                            categoryId: e.extendedProps.categoryId
                        }),
                        success: function (res) {
                            if (res.id) {
                                e.setProp('id', res.id);
                            }
                            if (info.draggedEl && info.draggedEl.parentNode) {
                                info.draggedEl.parentNode.removeChild(info.draggedEl);
                            }
                        },
                        error: function () {
                            alert("Kayıt başarısız oldu.");
                            e.remove();
                        }
                    });
                },

                eventDrop: function (info) {
                    const e = info.event;

                    $.ajax({
                        url: '/Event/UpdateEvent',
                        type: 'POST',
                        data: {
                            id: e.id,
                            start: e.start.toISOString(),
                            end: e.end ? e.end.toISOString() : e.start.toISOString()
                        },
                        success: function (res) {
                            if (!res.success) {
                                alert("Tarih güncellemesi başarısız.");
                            }
                        }
                    });
                },

                eventResize: function (info) {
                    const e = info.event;

                    $.ajax({
                        url: '/Event/UpdateEvent',
                        type: 'POST',
                        data: {
                            id: e.id,
                            start: e.start.toISOString(),
                            end: e.end ? e.end.toISOString() : null
                        },
                        success: function (res) {
                            if (!res.success) {
                                alert("Süre güncellemesi başarısız.");
                                info.revert();
                            }
                        },
                        error: function () {
                            alert("Sunucu hatası.");
                            info.revert();
                        }
                    });
                },

                eventDidMount: function (info) {
                    const titleEl = info.el.querySelector('.fc-event-title');
                    if (!titleEl) return;

                    const btnContainer = document.createElement('div');
                    btnContainer.style.display = 'inline-flex';
                    btnContainer.style.gap = '8px';
                    btnContainer.style.marginLeft = '8px';

                    // Güncelle butonu
                    const editBtn = document.createElement('a');
                    editBtn.href = `/Event/Edit/${info.event.id}`;
                    editBtn.title = "Düzenle";
                    editBtn.innerHTML = '✏️';
                    editBtn.className = 'edit-btn';
                    editBtn.style.fontSize = '14px';
                    editBtn.style.textDecoration = 'none';

                    // Sil butonu
                    const deleteBtn = document.createElement('span');
                    deleteBtn.title = "Sil";
                    deleteBtn.innerHTML = '🗑️';
                    deleteBtn.className = 'delete-btn';
                    deleteBtn.style.cursor = 'pointer';
                    deleteBtn.style.color = 'red';
                    deleteBtn.style.fontSize = '14px';

                    deleteBtn.addEventListener('click', function (e) {
                        e.stopPropagation();
                        if (confirm('Bu etkinliği silmek istiyor musunuz?')) {
                            $.ajax({
                                url: '/Event/DeleteEvent',
                                type: 'POST',
                                data: { id: info.event.id },
                                success: function () {
                                    info.event.remove();
                                }
                            });
                        }
                    });

                    btnContainer.appendChild(editBtn);
                    btnContainer.appendChild(deleteBtn);
                    titleEl.appendChild(btnContainer);
                }
            });

            calendar.render();
        });
    </script>
</body>
</html>
